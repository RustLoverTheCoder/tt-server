//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "message")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub chat_id: Uuid,
    pub content_id: Uuid,
    pub date: DateTimeWithTimeZone,
    pub sender_id: Uuid,
    pub reply_to_chat_id: Option<Uuid>,
    pub reply_to_message_id: Option<Uuid>,
    pub reply_to_top_message_id: Option<Uuid>,
    pub sending_state: String,
    pub is_deleting: bool,
    pub previous_local_id: Option<i32>,
    pub views: i32,
    pub forwards: i32,
    pub is_edited: bool,
    pub edit_date: Option<DateTimeWithTimeZone>,
    pub is_mentioned: bool,
    pub grouped_id: Option<Uuid>,
    pub is_scheduled: bool,
    pub is_from_scheduled: bool,
    pub is_silent: bool,
    pub is_pinned: bool,
    pub is_protected: bool,
    pub is_forwarding_allowed: bool,
    pub updated_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
